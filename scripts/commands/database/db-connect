#!/bin/bash

#### db-connect
#############################################################################
#                db-connect    path: ./scripts/commands/database/db-connect #
#  script used to start working on aspecific data base and provide access   #
#  to its details (table level scripts) and show a menu of table manipula   #
#  -tion options.                                                           #
#                                                                           #
#  authors: github.com/hadilotfy , github.com/Mustafa-Essam223              #
#                                                                           #
#  >>> interfacing                                                          #
#  """""""""""""""                                                          #
#        $$$ [dbms] db-connect [<db-name>] [<path>]                         #
#           : show a menu of table manipulation options for the db specif   #
#             -ied by:                                                      #
#               -two arg.s case: (path/db-name)                             #
#               -one arg.  case: (defaul_path/db-name)                      #
#               -zero arg. case: ask for db-name and db-path                #
#                                                                           #
#   * any additional argument will be ignored                               #
#############################################################################


data_path='./data'
 
if [ $# -eq 0  ]
then
    echo "db-connect: menu"
    read -p "db-connect: Enter DB name: " db_name
    read -p "db-connect: Enter DB path(press enter for default): " db_path
    # note the symbol (~) is not replaced with home dir but considerd relative.
    # so a directory named ~ has been made in $PWD
else
    db_path=$2
    db_name=$1
fi

# use the second arg. if present as the path to data
if [ $db_path ]; then data_path=$db_path; fi
# use first argument as db name
db_fname=$data_path/$db_name

# check if the db exists already if not exit with code 1002
if [ ! -d $db_fname  ]
then
    # No such db in such path.
    echo "db-connect: DataBase ($db_fname) is not found."
    exit 1002
else
    # requested db exitsts
    echo "db-connect: DataBase ($db_fname) connected"
    options=("Exit db-connect" "DDL" "DML")
        select choice in "${options[@]}"
        do  
        case $choice in
        DDL)    echo db-connect: DDL
            options=("Exit DDL" "Create Table" "Drop Table" "List Tables") 
            select choice in "${options[@]}"
            do 
                case $choice in
                'Create Table')   
                            echo DDL: t-create
                            ./commands/table/t-create ;;
                "Drop Table")     
                            echo DDL: t-drop
                            ./commands/table/t-drop ;;
                "List Tables")       
                            echo DDL: t-list
                            ./commands/table/t-list ;;
                "Exit DDL")       
                            echo DDL: exiting.. ; break ;;
                esac
            done
        ;;
        DML)    echo db-connect: DML
            options=("Exit DML" 
                     "Insert Record(s)"
                     "Delete Record(s)"
                     "Select Record(s)"
                     "Update Record(s)") 
            select choice in "${options[@]}"
            do 
                case $choice in
                "Insert Record(s)")   
                            echo DML: r-insert
                            ./commands/record/r-insert ;;
                "Delete Record(s)")     
                            echo DML: r-delete
                            ./commands/record/r-delete ;;
                "Select Record(s)")       
                            echo DML: r-select
                            ./commands/record/r-select ;;
                "Update Record(s)")       
                            echo DML: r-update
                            ./commands/record/r-update;;
                "Exit DML")
                            echo DML: exiting.. ; break ;;
                esac
            done
        ;;
        'Exit db-connect')    echo db-connect: exiting...; exit;;
        esac
        done

fi








# select reference:
#  https://unix.stackexchange.com/questions/293340/bash-how-can-i-re-display-selection-menu-after-a-selection-is-chosen-and-perfo
# Tue Apr  4 11:01:16 AM EET 2023


